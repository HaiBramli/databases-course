# We will start with non normalization table, point at problems and fix them by adding normalization

# Starting
DROP TABLE IF EXISTS customers;

CREATE TABLE customers (
  id varchar(100),
  name varchar(100),
  address varchar(100),
  city_status int,
  orders varchar(100),
  categories varchar(100),
  Pythagorean_theorem varchar(100),
  PRIMARY KEY (id)
);

insert into customers values(1, 'Gidi', 'Dizengoff 99, Tel-Aviv', 9, '1,2,3', '"VIP"', 'a^2 + b^2 = c^2');
insert into customers values(2, 'Atzmon Anat', 'Dizengoff 99/1, Tel Aviv', 9, '4', '"VIP", "New"', 'a^2 + b^2 = c^2');
insert into customers values(3, 'Meir Suissa', 'Dizengoff, Tel Aviv-Yaffo', 9, '', '"New"', 'a^2 + b^2 = c^2');
insert into customers values(4, 'Gali Atari', 'Dizengoff 99, Tel Aviv-Yaffo', 9, '', '"New"', 'a^2 + b^2 = c^2');
insert into customers values(5, 'Pluto', 'Kibbutz Megiddo', 10, '5, 6', '"VIP"', 'a^2 + b^2 = c^2');


select * from customers;

# With all the respect to the Pythagorean theorem, it has nothonig to do with our customers so we drop it.
# Seems so obvious.
# Nodbody will do it in real life, right?
# You will be surprised...


# With only related information
DROP TABLE IF EXISTS customers;

CREATE TABLE customers (
  id varchar(100),
  name varchar(100),
  address varchar(100),
  city_status int,
  orders varchar(100),
  categories varchar(100),
  PRIMARY KEY (id)
);

insert into customers values(1, 'Gidi', 'Dizengoff 99, Tel-Aviv', 9, '1,2,3', '"VIP"');
insert into customers values(2, 'Atzmon Anat', 'Dizengoff 99/1, Tel Aviv', 9, '4', '"VIP", "New"');
insert into customers values(3, 'Meir Suissa', 'Dizengoff, Tel Aviv-Yaffo', 9, '', '"New"');
insert into customers values(4, 'Gali Atari', 'Dizengoff 99, Tel Aviv Yaffo', 9, '', '"New"');
insert into customers values(5, 'Pluto', 'Kibbutz Megiddo', 10, '5, 6', '"VIP"');

 
select * from customers;

# Name is a complex attribute, lets split it into first and last names.
# Note that:
# 1. We should add Gov to Gidi
# 2. Anat Atmon name was written in a different order than the others.
# 3. Pluto, the famus dog, do not have a last name, not fitting well in this structure

DROP TABLE IF EXISTS customers;

CREATE TABLE customers (
  id varchar(100),
  first_name varchar(100),
  last_name varchar(100),
  address varchar(100),
  city_status int,
  orders varchar(100),
  categories varchar(100),
  PRIMARY KEY (id)
);

insert into customers values(1, 'Gidi', 'Gov', 'Dizengoff 99, Tel-Aviv', 9, '1,2,3', '"VIP"');
insert into customers values(2, 'Anat', 'Atzmon', 'Dizengoff 99/1, Tel Aviv', 9, '4', '"VIP", "New"');
insert into customers values(3, 'Meir', 'Suissa', 'Dizengoff, Tel Aviv-Yaffo', 9, '', '"New"');
insert into customers values(4, 'Gali', 'Atari', 'Dizengoff 99, Tel Aviv Yaffo', 9, '', '"New"');
insert into customers values(5, 'Pluto', '', 'Kibbutz Megiddo', 10, '5, 6', '"VIP"');

 
select * from customers;

# Address is a complex attribute, lets split it into street, house number and city.
# Note that:
# 1. We should guess Anat's house number, and lose her appartment number
# 2. We don't have Meir's house number
# 3. There are no street in a Kibbutz

DROP TABLE IF EXISTS customers;

CREATE TABLE customers (
  id varchar(100),
  first_name varchar(100),
  last_name varchar(100),
  street varchar(100),
  house_number int,
  city varchar(100),
  city_status int,
  orders varchar(100),
  categories varchar(100),
  PRIMARY KEY (id)
);

insert into customers values(1, 'Gidi', 'Gov', 'Dizengoff', 99, 'Tel-Aviv', 9, '1,2,3', '"VIP"');
insert into customers values(2, 'Anat', 'Atzmon', 'Dizengoff', 99, 'Tel Aviv', 9, '4', '"VIP", "New"');
insert into customers values(3, 'Meir', 'Suissa', 'Dizengoff', null, 'Tel Aviv-Yaffo', 9, '', '"New"');
insert into customers values(4, 'Gali', 'Atari', 'Dizengoff',99,  'Tel Aviv Yaffo', 9, '', '"New"');
insert into customers values(5, 'Pluto', '', null, null, 'Kibbutz Megiddo', 10, '5, 6', '"VIP"');

 
select * from customers;

# Note that Tel Aviv is written in many different ways, not representing being the same city.
# Yes, that happens way too often in the real world, mainly with unstatctured input.
# Also, a city status is a function of the city, not of the customer.
# We therefor create a ble for the cities, with their status.
# The customer table will use the city key.



# With only related information
DROP TABLE IF EXISTS cities;

CREATE TABLE cities (
  id varchar(100),
  name varchar(100),
  status int, # In cities table, the name status is more suitable than city_status
  PRIMARY KEY (id)
);

insert into cities values(1 ,'Kibbutz Megiddo', 10);
insert into cities values(2, 'Tel-Aviv', 9);

 
select * from cities;

# With only related information
DROP TABLE IF EXISTS customers;

CREATE TABLE customers (
  id varchar(100),
  first_name varchar(100),
  last_name varchar(100),
  street varchar(100),
  house_number int,
  city_id int,
  orders varchar(100),
  categories varchar(100),
  PRIMARY KEY (id)
);

insert into customers values(1, 'Gidi', 'Gov', 'Dizengoff', 99, 2, '1,2,3', '"VIP"');
insert into customers values(2, 'Anat', 'Atzmon', 'Dizengoff', 99, 2, '4', '"VIP", "New"');
insert into customers values(3, 'Meir', 'Suissa', 'Dizengoff', null, 2, '', '"New"');
insert into customers values(4, 'Gali', 'Atari', 'Dizengoff',99,  2, '', '"New"');
insert into customers values(5, 'Pluto', '', null, null, 1, '5, 6', '"VIP"');

 
select * from customers;

 
select * 
from customers
join cities
on city_id = cities.id;

